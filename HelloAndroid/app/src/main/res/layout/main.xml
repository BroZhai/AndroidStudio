<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".HelloAndroid">
    <!-- TextView控件，用于在安卓系统中显示文字
        可以看到下面的android:text 就定义了展示的内容"Hello world!"
        :id 给当前元素定义一个'唯一标识符'，用于后期'操作定位' ("@+id/自定义id")
            这里注册的id就会跑到"R.id"里面去，我们在后续就可以通过'R.id.xxx'来对某个设置了id的'控件'进行定位
        :layout_width/height: 定义当前元素长/宽 (wrap_content '更具内容'自动确定长宽)
        :text 设定文字信息

        这里用的布局为'约束布局'androidx.constraintlayout.widget.ConstraintLayout
        意味着我们必须要去设置这些’约束位置‘

        (这里就暂时用parent的来糊弄一下，之后再来具体学习研究，结合那个UI写完后'直接拖位置'XD)
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
    -->
    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <Button
        android:id="@+id/my_firstButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="我是一个按钮"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.756"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.162" />
</androidx.constraintlayout.widget.ConstraintLayout>